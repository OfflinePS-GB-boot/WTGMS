package y88.kirill.msroutes.servises;

import org.springframework.stereotype.Component;

/**
 * Класс для расчета сектора по радиусу в котором находится заданная точка
 *
 * */

@Component
public class Sector {

    private final int [] longitudeArray = {111321,111303,111254,111170,111052,110901,110716,110497,110245,109960,
                                            109641,109289,108904,108487,108036,107553,107036,106488,105907,105294,
                                            104649,103972,103264,102524,101754,100952,100119,99257,98364,97441,
                                            96488,95506,94495,93455,92386,91290,90165,89013,87834,86628,
                                            85395,84137,82852,81542,80208,78848,77465,76037,74627,73173,
                                            71697,70199,68679,67138,65577,63995,62394,60773,59134,57476,
                                            55801,54108,52399,50674,48933,47176,45403,43621,41522,40011,
                                            38187,36352,34503,32647,30780,28902,27016,25122,23219,21310,
                                            19394,17472,15544,13612,11675,9735,7791,5846,3898,1949,
                                            0};
    private final int [] latitudeArray = {110576,110577,110578,110579,110582,110585,110588,110593,110598,110604,
                                    110610,110617,110624,110633,110641,110653,110661,110671,110682,110694,
                                    110706,110719,110732,110746,110760,110775,110790,110806,110821,110838,
                                    110854,110871,110889,110906,110924,110943,110961,110980,110998,111017,
                                    111037,111056,111075,111095,111114,111134,111153,111173,111192,111212,
                                    111231,111250,111269,111288,111307,111325,111344,111362,111379,111397,
                                    111414,111431,111447,111463,111479,111494,111509,111524,111538,111551,
                                    111565,111576,111588,111599,111610,111620,111630,111639,111647,111655,
                                    111662,111668,111674,111679,111683,111687,111690,111693,111694,111695,
                                    111696};


    /**Возвращает двумерный массив в котором:
     sector[0] - долгота левой верхней точки (longitudeMin)
     sector[1]- широта левой верхней точки  (latitudeMax)
     sector[2]- долгота правой нижней точки (longitudeMax)
     sector[3]- широта правой нижней точки  (latitudeMin)
     PS возвращаем квадрат, который описывает окружность с заданный радиусом
     */
    public double[] getSectorByRadius(double centerLongitude, double centerLatitude, int radius ){
        double [] sector = new double[4];

        sector[0] = centerLongitude - ((double) radius)/longitudeArray[(int)centerLatitude];
        sector[1] = centerLatitude + ((double) radius)/latitudeArray[(int)centerLatitude];

        sector[2] = centerLongitude + ((double) radius)/longitudeArray[(int)centerLatitude];
        sector[3] = centerLatitude - ((double) radius)/latitudeArray[(int)centerLatitude];

        return sector;
    }




}
